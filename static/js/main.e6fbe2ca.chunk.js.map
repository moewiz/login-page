{"version":3,"sources":["utils/auth.js","components/Layouts/styled.js","components/Layouts/Sidebar.js","components/Layouts/Header.js","components/Home/styled.js","components/Layouts/MainLayout.js","components/Layouts/LoginLayout.js","components/Login/styled.js","services/Auth.js","components/Login/LoginForm.js","components/Login/Login.js","components/Register/styled.js","components/Inputs/CustomSelect.js","components/Register/Register.js","components/Home/Dashboard.js","components/Loading/styled.js","components/Loading/Loading.js","components/Home/Profile.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Auth","setAccessToken","token","localStorage","setItem","getAccessToken","getItem","isLoggedIn","logout","MainLayoutWrapper","styled","div","HeaderWrapper","ContentLayout","SidebarWrapper","MainContentLayout","LoginLayoutWrapper","BackgroundImage","props","isRegisterPage","RightContent","MainForm","sidebars","url","icon","label","CustomLink","to","activeOnlyWhenExact","match","useRouteMatch","path","exact","src","className","alt","width","Sidebar","map","index","key","withRouter","onClick","history","push","HomeWrapper","ProfileWrapper","Avatar","Information","Title","Content","MainLayout","children","LoginLayout","LoginFormWrapper","FormTitle","h2","SubmitButton","button","FormGroup","baseURL","AuthService","login","email","password","axios","post","register","data","getInfo","get","headers","validationSchema","yup","shape","required","useState","errorMsg","setErrorMsg","onSubmitForm","values","actions","a","auth","setSubmitting","initialValues","onSubmit","touched","errors","isSubmitting","htmlFor","id","type","name","placeholder","component","disabled","Login","RegisterWrapper","CustomSelect","options","field","form","value","find","option","onChange","setFieldValue","onBlur","classNamePrefix","genderOptions","gender","age","min","max","Dashboard","LoadingStyled","Loading","Profile","info","setInfo","loading","setLoading","useEffect","then","catch","e","Home","PublicRoute","Component","rest","PrivateRoute","NotFound","App","Register","sidebar","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6fbe2ca.chunk.js","sourcesContent":["class Auth {\n  static setAccessToken = (token) => {\n    localStorage.setItem(\"access_token\", token)\n  };\n\n  static getAccessToken = () => {\n    return localStorage.getItem(\"access_token\");\n  };\n\n  static isLoggedIn = () => {\n    const token = this.getAccessToken();\n    return !!token;\n  };\n\n  static logout = () => {\n    this.setAccessToken(\"\");\n  };\n}\n\nexport default Auth;","import styled from 'styled-components';\n\nexport const MainLayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  color: #666;\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px;\n  border-bottom: 1px solid #f2f2f2;\n  \n  .logo {\n    cursor: pointer;\n  }\n\n  .logout-block {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n\n    span {\n      margin-left: 5px;\n    }\n  }\n`;\n\nexport const ContentLayout = styled.div`\n  display: flex;\n  height: calc(100vh - 56px);\n`;\n\nexport const SidebarWrapper = styled.div`\n  min-width: 250px;\n  border-right: 1px solid #f2f2f2;\n  padding: 20px;\n  height: calc(100vh - 100px);\n  \n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    \n    li {\n      margin: 10px 0;\n      div {\n        padding: 10px 0;\n        a {\n          display: flex;\n          align-items: center;\n          text-decoration: none;\n          color: #666;\n          img {\n            margin-right: 10px;\n          }\n        }\n        &.active {\n          a {\n            color: #009af9;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const MainContentLayout = styled.div`\n  flex: 1;\n  padding: 20px;\n  background-color: #fafbfd;\n`;\n\nexport const LoginLayoutWrapper = styled.div`\n  display: flex;\n  margin: 0 auto;\n  height: 100vh;\n  \n  a, .forget-pwd {\n    color: #009af9;\n  }\n  \n  a {\n    text-decoration: none;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  flex: 70%;\n  background-image: ${(props) => props.isRegisterPage ? 'url(../img/register-bg.jpg)' : 'url(../img/login-bg.jpg)'};\n  background-color: #f5f5f5;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const RightContent = styled.div`\n  flex: 30%;\n  background-color: #fff;\n  padding: 60px;\n  font-size: 14px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MainForm = styled.div`\n  flex: 1;\n  color: #333;\n  display: flex;\n  align-items: center;\n`;\n","import React from 'react';\nimport {Link, useRouteMatch} from \"react-router-dom\";\n\nimport {SidebarWrapper} from \"./styled\";\n\nexport const sidebars = [\n  {url: '/dashboard', icon: 'dashboard@2x.png', label: 'Dashboard'},\n  {url: '/incoming-enq', icon: 'incoming-enq@2x.png', label: 'Incoming Enquiries'},\n  {url: '/incoming-qout', icon: 'incoming-qout@2x.png', label: 'Incoming Quotations'},\n  {url: '/product', icon: 'product@2x.png', label: 'Products'},\n  {url: '/my-request', icon: 'my-request@2x.png', label: 'My Request'},\n  {url: '/order', icon: 'order@2x.png', label: 'Order History'},\n  {url: '/profile', icon: 'profile@2x.png', label: 'Profile'},\n  {url: '/setting', icon: 'setting@2x.png', label: 'Settings'},\n];\n\nconst CustomLink = ({ to, icon, label, activeOnlyWhenExact }) => {\n  const match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact\n  });\n  const src = '../icons/' + (match ? 'active/' : '') + icon;\n\n  return (\n    <div className={match ? \"active\" : \"\"}>\n      <Link to={to}><img src={src} alt={label} width={20}/>{label}</Link>\n    </div>\n  );\n};\n\nconst Sidebar = () => {\n  return (\n    <SidebarWrapper>\n      <ul>\n        {sidebars.map(({url, icon, label}, index) => (\n          <li key={index}>\n            <CustomLink to={url} label={label} icon={icon} activeOnlyWhenExact={true} />\n          </li>\n        ))}\n      </ul>\n    </SidebarWrapper>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\";\n\nimport {HeaderWrapper} from \"./styled\";\nimport Auth from \"../../utils/auth\";\n\nconst Header = (props) => {\n  const goHome = () => {\n    props.history.push('/');\n  };\n  const logout = () => {\n    Auth.logout();\n    props.history.push('/login');\n  };\n\n  return (\n    <HeaderWrapper>\n      <img src=\"../img/logo@2x.jpg\" alt=\"logo\" width={150} onClick={goHome} className=\"logo\"/>\n      <div className=\"logout-block\" onClick={logout}>\n        <img src=\"../icons/active/logout@2x.png\" alt=\"logo\" width={20}/>\n        <span>Logout</span>\n      </div>\n    </HeaderWrapper>\n  );\n};\n\nexport default withRouter(Header);\n","import styled from 'styled-components';\n\nexport const HomeWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #fff;\n  border: 1px solid #f2f2f2;\n  border-radius: 5px;\n  height: 100%;\n`;\n\nexport const ProfileWrapper = styled.div`\n  position: relative;\n  background-color: #f2f5fa;\n  border-radius: 5px;\n  width: 350px;\n  min-height: 400px;\n  padding: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Avatar = styled.div`\n  position: absolute;\n  left: calc(50% - 50px);\n  top: -50px;\n  img {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n  }\n`;\n\nexport const Information = styled.div`\n`;\n\nexport const Title = styled.div`\n  color: #333;\n  font-size: 15px;\n`;\n\nexport const Content = styled.div`\n  margin-bottom: 15px;\n  font-size: 13px;\n`;\n","import React from 'react';\n\nimport {MainLayoutWrapper, ContentLayout, MainContentLayout} from \"./styled\";\nimport Sidebar from \"./Sidebar\";\nimport Header from \"./Header\";\nimport {HomeWrapper} from \"../Home/styled\";\n\nconst MainLayout = ({children}) => {\n  return (\n    <MainLayoutWrapper>\n      <Header/>\n      <ContentLayout>\n        <Sidebar/>\n        <MainContentLayout>\n          <HomeWrapper>\n            {children}\n          </HomeWrapper>\n        </MainContentLayout>\n      </ContentLayout>\n    </MainLayoutWrapper>\n  );\n};\n\nexport default MainLayout;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {BackgroundImage, LoginLayoutWrapper, MainForm, RightContent} from \"./styled\";\n\nconst LoginLayout = (props) => {\n  const { isRegisterPage } = props;\n\n  return (\n    <LoginLayoutWrapper>\n      <BackgroundImage isRegisterPage={isRegisterPage} />\n      <RightContent>\n        <img src=\"../img/logo@2x.jpg\" alt=\"logo\" width={200}/>\n        <MainForm>{props.children}</MainForm>\n      </RightContent>\n    </LoginLayoutWrapper>\n  );\n};\n\nLoginLayout.propTypes = {\n  isRegisterPage: PropTypes.bool.isRequired,\n};\n\nexport default LoginLayout;\n","import styled from 'styled-components';\n\nexport const LoginFormWrapper = styled.div`\n  flex: 1;\n  .forget-pwd {\n    display: block;\n    font-size: 11px;\n    cursor: pointer;\n    margin-bottom: 20px;\n  }\n    \n  .error {\n    color: #d92026;\n    font-size: 12px;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  font-size: 26px;\n  font-weight: 500;\n`;\n\nexport const SubmitButton = styled.button`\n  color: #fff;\n  background-color: #009af9;\n  padding: 10px 15px\n  text-transform: uppercase;\n  border: 1px solid #009af9;\n  border-radius: 4px;\n  min-width: 200px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nexport const FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 5px 0 10px 0;\n  \n  label {\n    font-size: 13px;\n  }\n  \n  input {\n    padding: 10px 0px;\n    border: none;\n    border-bottom: 2px solid #eee;\n    font-size: 13px;\n    margin: 5px 0;\n    color: #333;\n    outline: none;\n  }\n  \n  .custom-select-container{\n    .react-select {\n      &__control {\n        border: none;\n        border-bottom: 2px solid #eee;\n        border-radius: 0;\n        box-shadow: none;\n        font-size: 13px;\n        &:hover, &--is-focused {\n          box-shadow: none;\n        }\n      }\n      &__value-container {\n        padding-left: 0px;\n      }\n      &__indicator {\n        padding-right: 0px;\n        &-separator {\n          display: none;\n        }\n      }\n    }\n  }\n`;\n","import axios from \"axios\";\n\nimport Auth from \"../utils/auth\";\n\nconst baseURL = \"https://radiant-dusk-57430.herokuapp.com/api/\";\n\nconst AuthService = {\n  login({email, password}) {\n    return axios.post('/auth/login', {email, password}, {baseURL});\n  },\n  register(data) {\n    return axios.post('/auth/register', data, {baseURL});\n  },\n  getInfo() {\n    return axios.get('/auth/me', {\n      baseURL, headers: {\n        \"x-access-token\": Auth.getAccessToken()\n      }\n    })\n  }\n};\n\nexport default AuthService;\n","import React, {useState} from 'react';\nimport {withRouter, Link} from \"react-router-dom\";\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\nimport * as yup from 'yup';\n\nimport {LoginFormWrapper, FormTitle, SubmitButton, FormGroup} from \"./styled\";\nimport AuthService from \"../../services/Auth\";\nimport Auth from \"../../utils/auth\";\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Enter an email')\n    .required('Enter an email'),\n  password: yup\n    .string()\n    .required('Enter a password'),\n});\n\nconst LoginForm = (props) => {\n  const [errorMsg, setErrorMsg] = useState('');\n  const onSubmitForm = async (values, actions) => {\n    try {\n      const { data } = await AuthService.login(values);\n      if (data && data.auth && data.token) {\n        Auth.setAccessToken(data.token);\n        // redirect to home page\n        props.history.push('/profile');\n      }\n      actions.setSubmitting(false);\n    } catch (e) {\n      setErrorMsg('Login failed');\n      actions.setSubmitting(false);\n    }\n  };\n\n  return (\n    <LoginFormWrapper>\n      <FormTitle>Login</FormTitle>\n      <p>Don't have an account yet? <Link to=\"/register\">Sign Up</Link></p>\n      <Formik\n        initialValues={{email: '', password: ''}}\n        onSubmit={onSubmitForm}\n        validationSchema={validationSchema}\n      >\n        {({touched, errors, isSubmitting}) => (\n          <Form>\n            <FormGroup>\n              <label htmlFor=\"email\">Email</label>\n              <Field id=\"email\" type=\"email\" name=\"email\" placeholder=\"Enter your email address\"\n                     className={`form-control ${\n                       touched.email && errors.email ? \"is-invalid\" : \"\"\n                       }`}/>\n              <ErrorMessage component=\"div\" name=\"email\" className=\"error\"/>\n            </FormGroup>\n            <FormGroup>\n              <label htmlFor=\"password\">Password</label>\n              <Field id=\"password\" type=\"password\" name=\"password\" placeholder=\"Enter your password\"\n                     className={`form-control ${\n                       touched.password && errors.password ? \"is-invalid\" : \"\"\n                       }`}/>\n              <ErrorMessage component=\"div\" name=\"password\" className=\"error\"/>\n            </FormGroup>\n            <span className=\"forget-pwd\">Forget Password</span>\n            {errorMsg && <div className=\"error\">{errorMsg}</div>}\n            <SubmitButton type=\"submit\"\n                          disabled={isSubmitting}>{isSubmitting ? 'Please wait...' : 'Login'}</SubmitButton>\n          </Form>\n        )}\n      </Formik>\n    </LoginFormWrapper>\n  );\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\n\nimport LoginForm from \"./LoginForm\";\n\nconst Login = () => (<LoginForm/>);\n\nexport default Login;\n","import styled from 'styled-components';\n\nimport {LoginFormWrapper} from \"../Login/styled\";\n\nexport const RegisterWrapper = styled(LoginFormWrapper)``;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst CustomSelect = ({options, field, form, placeholder}) => {\n  return (\n    <Select\n      options={options}\n      name={field.name}\n      value={options ? options.find(option => option.value === field.value) : ''}\n      onChange={(option) => form.setFieldValue(field.name, option.value)}\n      onBlur={field.onBlur}\n      placeholder={placeholder}\n      className=\"custom-select-container\"\n      classNamePrefix=\"react-select\"\n    />\n  );\n};\n\nexport default CustomSelect;\n","import React, {useState} from 'react';\nimport {withRouter, Link} from \"react-router-dom\";\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport * as yup from \"yup\";\n\nimport {RegisterWrapper} from \"./styled\";\nimport {FormGroup, FormTitle, SubmitButton} from \"../Login/styled\";\nimport CustomSelect from \"../Inputs/CustomSelect\";\nimport AuthService from \"../../services/Auth\";\nimport Auth from \"../../utils/auth\";\n\nconst genderOptions = [\n  {value: 0, label: \"Male\"},\n  {value: 1, label: \"Female\"},\n];\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Enter a full name'),\n  email: yup\n    .string()\n    .email('Enter an email')\n    .required('Enter an email'),\n  password: yup\n    .string()\n    .required('Enter a password'),\n  gender: yup\n    .string()\n    .required('Select a gender'),\n  age: yup\n    .number()\n    .min(18, 'Enter an age between 18 and 60')\n    .max(60, 'Enter an age between 18 and 60')\n    .required('Enter an age'),\n});\n\nconst Register = (props) => {\n  const [errorMsg, setErrorMsg] = useState('');\n  const onSubmitForm = async (values, actions) => {\n    try {\n      const { data } = await AuthService.register(values);\n      if (data && data.auth && data.token) {\n        Auth.setAccessToken(data.token);\n        // redirect to home page\n        props.history.push('/profile');\n      }\n      actions.setSubmitting(false);\n    } catch (e) {\n      setErrorMsg('Login failed');\n      actions.setSubmitting(false);\n    }\n  };\n\n  return (\n    <RegisterWrapper>\n      <FormTitle>Register</FormTitle>\n      <p>Already have an account? <Link to=\"/login\">LogIn</Link></p>\n      <Formik\n        initialValues={{name: '', email: '', password: '', gender: '', age: ''}}\n        onSubmit={onSubmitForm}\n        validationSchema={validationSchema}\n      >\n        {({touched, errors, isSubmitting}) => (\n          <Form>\n            <FormGroup>\n              <label htmlFor=\"name\">Full Name</label>\n              <Field id=\"name\" type=\"text\" name=\"name\" placeholder=\"First and last name\"\n                     className={`form-control ${\n                       touched.name && errors.name ? \"is-invalid\" : \"\"\n                       }`}/>\n              <ErrorMessage component=\"div\" name=\"name\" className=\"error\"/>\n            </FormGroup>\n            <FormGroup>\n              <label htmlFor=\"email\">Email address</label>\n              <Field id=\"email\" type=\"email\" name=\"email\" placeholder=\"Email address\"\n                     className={`form-control ${\n                       touched.email && errors.email ? \"is-invalid\" : \"\"\n                       }`}/>\n              <ErrorMessage component=\"div\" name=\"email\" className=\"error\"/>\n            </FormGroup>\n            <FormGroup>\n              <label htmlFor=\"password\">Password</label>\n              <Field id=\"password\" type=\"password\" name=\"password\" placeholder=\"Enter your password\"\n                     className={`form-control ${\n                       touched.password && errors.password ? \"is-invalid\" : \"\"\n                       }`}/>\n              <ErrorMessage component=\"div\" name=\"password\" className=\"error\"/>\n            </FormGroup>\n            <FormGroup>\n              <label htmlFor=\"gender\">Gender</label>\n              <Field name=\"gender\" component={CustomSelect} placeholder=\"Select gender\" options={genderOptions}/>\n              <ErrorMessage component=\"div\" name=\"gender\" className=\"error\"/>\n            </FormGroup>\n            <FormGroup>\n              <label htmlFor=\"age\">Age</label>\n              <Field id=\"age\" type=\"number\" name=\"age\" placeholder=\"Age in number\"\n                     className={`form-control ${\n                       touched.age && errors.age ? \"is-invalid\" : \"\"\n                       }`}/>\n              <ErrorMessage component=\"div\" name=\"age\" className=\"error\"/>\n            </FormGroup>\n            {errorMsg && <div className=\"error\">{errorMsg}</div>}\n            <SubmitButton type=\"submit\"\n                          disabled={isSubmitting}>{isSubmitting ? 'Please wait...' : 'Register'}</SubmitButton>\n          </Form>\n        )}\n      </Formik>\n    </RegisterWrapper>\n  );\n};\n\nexport default withRouter(Register);\n","import React from 'react';\n\nconst Dashboard = (props) => {\n  return (\n    <div>\n      {props.name}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const LoadingStyled = styled.div`\n  width: 40px;\n  height: 40px;\n\n  position: relative;\n  margin: 100px auto;\n\n  .double-bounce1, .double-bounce2 {\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #333;\n    opacity: 0.6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    \n    -webkit-animation: sk-bounce 2.0s infinite ease-in-out;\n    animation: sk-bounce 2.0s infinite ease-in-out;\n  }\n\n  .double-bounce2 {\n    -webkit-animation-delay: -1.0s;\n    animation-delay: -1.0s;\n  }\n\n  @-webkit-keyframes sk-bounce {\n    0%, 100% { -webkit-transform: scale(0.0) }\n    50% { -webkit-transform: scale(1.0) }\n  }\n\n  @keyframes sk-bounce {\n    0%, 100% { \n      transform: scale(0.0);\n      -webkit-transform: scale(0.0);\n    } 50% { \n      transform: scale(1.0);\n      -webkit-transform: scale(1.0);\n    }\n  }\n`;\n","import React from 'react';\nimport {LoadingStyled} from \"./styled\";\n\nconst Loading = () => {\n  return (\n    <LoadingStyled>\n      <div className=\"double-bounce1\"></div>\n      <div className=\"double-bounce2\"></div>\n    </LoadingStyled>\n  );\n};\n\nexport default Loading;\n","import React, {useEffect, useState} from 'react';\nimport {Avatar, Information, Content, ProfileWrapper, Title} from \"./styled\";\nimport AuthService from \"../../services/Auth\";\nimport Loading from \"../Loading\";\n\nconst Profile = () => {\n  const [info, setInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    AuthService.getInfo().then(({data}) => {\n      setInfo(data)\n      setLoading(false);\n    }).catch(e => {\n      setLoading(false);\n    });\n  }, [])\n\n  return (\n    <ProfileWrapper>\n      {loading ?\n        <Loading/> :\n        <>\n          <Avatar>\n            <img src=\"../img/dp@2x.jpg\" alt=\"avatar\"/>\n          </Avatar>\n          < Information>\n            < Title> Full Name</Title>\n            <Content>{info && info.name}</Content>\n            <Title>Email address</Title>\n            <Content>{info && info.email}</Content>\n            <Title>Gender</Title>\n            <Content>{info && info.gender === 0 ? 'Male' : 'Female'}</Content>\n            <Title>Age</Title>\n            <Content>{info && info.age} years</Content>\n          </Information>\n        </>\n      }\n    </ProfileWrapper>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\n\nimport Dashboard from \"./Dashboard\";\nimport Profile from \"./Profile\";\n\nconst Home = (props) => {\n  switch (props.path) {\n    case '/profile':\n      return <Profile/>;\n    default:\n      return <Dashboard {...props} />;\n  }\n};\n\nexport default Home;\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport Auth from \"./utils/auth\";\nimport {sidebars} from \"./components/Layouts/Sidebar\";\n\n// Import Layouts\nimport MainLayout from \"./components/Layouts/MainLayout\";\nimport LoginLayout from \"./components/Layouts/LoginLayout\";\n\n// Import Pages\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Home from \"./components/Home\";\n\nconst PublicRoute = (props) => {\n  const {component: Component, ...rest} = props;\n  const isRegisterPage = props.name === 'Register';\n\n  if (Auth.isLoggedIn()) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <LoginLayout isRegisterPage={isRegisterPage}>\n      <Component {...rest} />\n    </LoginLayout>\n  );\n};\n\nconst PrivateRoute = (props) => {\n  const {component: Component, ...rest} = props;\n\n  if (Auth.isLoggedIn()) {\n    return (\n      <MainLayout>\n        <Component {...rest} />\n      </MainLayout>\n    )\n  }\n\n  return <Redirect to=\"/login\" />;\n};\n\nconst NotFound = () => <Redirect to=\"/dashboard\"/>;\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <PublicRoute path=\"/login\" name=\"Login\" component={Login}/>\n        <PublicRoute path=\"/register\" name=\"Register\" component={Register}/>\n        {sidebars.map((sidebar, index) => (\n          <PrivateRoute path={sidebar.url} name={sidebar.label} component={Home} key={index} />\n        ))}\n        <PrivateRoute exact path=\"/\" name=\"Home\" component={Home}/>\n        <Route component={NotFound}/>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Routes is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}